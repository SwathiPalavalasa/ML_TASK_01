
import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

# Sample data
data = pd.DataFrame({
    'square_footage': [1500, 1800, 2400, 3000, 3500, 1200, 2000, 2800],
    'bedrooms': [3, 4, 3, 5, 4, 2, 3, 4],
    'washrooms': [2, 3, 2, 4, 3, 1, 2, 3],
    'price': [300000, 400000, 500000, 600000, 650000, 250000, 420000, 580000]
})

# Features and target
X = data[['square_footage', 'bedrooms', 'washrooms']]
y = data['price']

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)

# Model training and prediction
model = LinearRegression().fit(X_train, y_train)
y_pred = model.predict(X_test)

# Evaluation and output
print(f"MSE: {mean_squared_error(y_test, y_pred):.2f}")
print("Intercept:", model.intercept_)
print("Coefficients:", dict(zip(X.columns, model.coef_)))

# Predict new house price
new_house = pd.DataFrame({'square_footage': [2200], 'bedrooms': [3], 'washrooms': [2]})
print(f"Predicted price: rs.{model.predict(new_house)[0]:,.2f}")


